<Window x:Class="WordKiller.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:typeXaml="clr-namespace:WordKiller.DataTypes.TypeXAML"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:WordKiller.ViewModels"
        xmlns:gu="https://github.com/GuOrg/Gu.Wpf.FlipView"
        xmlns:t="clr-namespace:WordKiller.Models.Template"
        xmlns:tp="clr-namespace:WordKiller.DataTypes.ParagraphData.Paragraphs"
        xmlns:rtb="clr-namespace:WordKiller.Scripts"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:td="clr-namespace:DocumentFormat.OpenXml.Wordprocessing;assembly=DocumentFormat.OpenXml"
        mc:Ignorable="d"
        Title="{Binding Path=Document.WinTitle}" Height="500" Width="720" MinHeight="250" MinWidth="620" WindowStartupLocation="CenterScreen" Icon="/Resources/Pictures/512x512.png" AllowDrop="True" Closing="Win_Closing">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding KeyDownEvent}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="DragEnter">
            <i:InvokeCommandAction Command="{Binding Path=AllowDrop}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="DragOver">
            <i:InvokeCommandAction Command="{Binding Path=AllowDrop}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="DragLeave">
            <i:InvokeCommandAction Command="{Binding Path=DisallowDrop}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <vm:ViewModelMain/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Command="{Binding Document.NewFile}" Key="N" Modifiers="Control"/>
        <KeyBinding Command="{Binding Document.OpenFile}" Key="O" Modifiers="Control"/>
        <KeyBinding Command="{Binding Document.SaveFile}" Key="S" Modifiers="Control"/>
        <KeyBinding Command="{Binding Document.SaveAsFile}" Key="S" Modifiers="Control+Alt"/>
        <KeyBinding Command="{Binding Quit}" Key="Q" Modifiers="Control"/>
        <KeyBinding Command="{Binding Document.Deselect}" Key="Esc"/>
    </Window.InputBindings>
    <Window.Resources>
        <DataTemplate x:Key="CustomTemplate">
            <Border Padding="3" Background="Purple">
                <TextBox Text="{Binding Path=Value}" />
            </Border>
        </DataTemplate>
        <ObjectDataProvider x:Key="typeDocument" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="td:JustificationValues"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid x:Name="root" Background="{Binding Path=Settings.Personalization.MainColor}">
        <Grid Visibility="{Binding Path=VisibilityMainPanel}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Menu Grid.Row="0" Grid.Column="0" Style="{StaticResource Menu}">
                <MenuItem ItemContainerStyle="{StaticResource MenuItem}">
                    <MenuItem.Header>
                        <TextBlock Text="{DynamicResource File}" Style="{StaticResource TextBlockMI}"/>
                    </MenuItem.Header>
                    <MenuItem Header="{DynamicResource Export}" Command="{Binding Document.ExportFile}"/>
                    <MenuItem Header="{DynamicResource PDF}" IsCheckable="True" IsChecked="{Binding Path=Document.Export.ExportPDF}" Visibility="{Binding Path=Document.Export.VisibilityExportPDF}"/>
                    <MenuItem Header="{DynamicResource HTML}" IsCheckable="True" IsChecked="{Binding Path=Document.Export.ExportHTML}" Visibility="{Binding Path=Document.Export.VisibilityExportHTML}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource Create}" Command="{Binding Document.NewFile}" InputGestureText="Ctrl+N"/>
                    <MenuItem Header="{DynamicResource Open}" Command="{Binding Document.OpenFile}" InputGestureText="Ctrl+O"/>
                    <MenuItem Header="{DynamicResource Save}" Command="{Binding Document.SaveFile}" InputGestureText="Ctrl+S"/>
                    <MenuItem Header="{DynamicResource SaveAs}" Command="{Binding Document.SaveAsFile}" InputGestureText="Ctrl+Alt+S"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource Exit}" Command="{Binding Quit}" InputGestureText="Ctrl+Q"/>
                </MenuItem>
                <MenuItem ItemContainerStyle="{StaticResource MenuItem}">
                    <MenuItem.Header>
                        <TextBlock Text="{DynamicResource Type}" Style="{StaticResource TextBlockMI}"/>
                    </MenuItem.Header>
                    <MenuItem Header="{DynamicResource DefaultDocument}" IsChecked="{Binding Path=Document.DefaultDocument}" Command="{Binding Document.DefaultDocument_Click}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource Coursework}" IsChecked="{Binding Path=Document.Coursework}" Command="{Binding Document.Coursework_Click}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource LaboratoryWork}" IsChecked="{Binding Path=Document.LaboratoryWork}" Command="{Binding Document.LaboratoryWork_Click}"/>
                    <MenuItem Header="{DynamicResource PracticeWork}" IsChecked="{Binding Path=Document.PracticeWork}" Command="{Binding Document.PracticeWork_Click}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource ControlWork}" IsChecked="{Binding Path=Document.ControlWork}" Command="{Binding Document.ControlWork_Click}"/>
                    <MenuItem Header="{DynamicResource Referat}" IsChecked="{Binding Path=Document.Referat}" Command="{Binding Document.Referat_Click}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource VKR}" IsChecked="{Binding Path=Document.VKR}" Command="{Binding Document.VKR_Click}"/>
                </MenuItem>
                <MenuItem ItemContainerStyle="{StaticResource MenuItem}">
                    <MenuItem.Header>
                        <TextBlock Text="{DynamicResource Document}" Style="{StaticResource TextBlockMI}"/>
                    </MenuItem.Header>
                    <MenuItem Header="{DynamicResource Title}" IsCheckable="True" IsChecked="{Binding Path=Document.Data.Properties.Title}" Visibility="{Binding Path=Document.VisibilitY.TitleMI}" Command="{Binding Document.TitleMI}"/>
                    <MenuItem Header="{DynamicResource TaskSheet}" IsCheckable="True" IsChecked="{Binding Path=Document.Data.Properties.TaskSheet}" Visibility="{Binding Path=Document.VisibilitY.TaskSheetMI}" Command="{Binding Document.TaskSheetMI}"/>
                    <MenuItem Header="{DynamicResource ListOfReferences}" IsCheckable="True" IsChecked="{Binding Path=Document.Data.Properties.ListOfReferences}" Command="{Binding Document.ListOfReferencesMI}"/>
                    <MenuItem Header="{DynamicResource Appendix}" IsCheckable="True" IsChecked="{Binding Path=Document.Data.Properties.Appendix}" Command="{Binding Document.AppendixMI}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource TOC}" IsCheckable="True" IsChecked="{Binding Path=Document.Data.Properties.TableOfContents}"/>
                    <MenuItem Header="{DynamicResource PageNumbers}" IsCheckable="True" IsChecked="{Binding Path=Document.Data.Properties.PageNumbers}"/>
                    <MenuItem Header="{DynamicResource NumbersToHeaders}" IsCheckable="True" IsChecked="{Binding Path=Document.Data.Properties.NumberHeading}"/>
                </MenuItem>
                <MenuItem Visibility="Collapsed" ItemContainerStyle="{StaticResource MenuItem}">
                    <MenuItem.Header>
                        <TextBlock Text="{DynamicResource Network}" Style="{StaticResource TextBlockMI}"/>
                    </MenuItem.Header>
                    <MenuItem Header="Создать" Command="{Binding NetworkCommans.CreateNetwork}"/>
                    <Separator/>
                    <MenuItem Header="Подключиться" Command="{Binding NetworkCommans.JoinNetwork}"/>
                    <MenuItem Header="Отключиться" Command="{Binding NetworkCommans.LeaveNetwork}"/>
                </MenuItem>
                <MenuItem ItemContainerStyle="{StaticResource MenuItem}">
                    <MenuItem.Header>
                        <TextBlock Text="{DynamicResource Help}" Style="{StaticResource TextBlockMI}"/>
                    </MenuItem.Header>
                    <MenuItem Header="{DynamicResource Documentation}" Command="{Binding HelpCommands.Documentation}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource AboutProgram}" Command="{Binding HelpCommands.AboutProgram}"/>
                </MenuItem>
            </Menu>
            <Grid Grid.Row="0" Grid.Column="0">
                <Button Margin="0,0,3,0" HorizontalAlignment="Right" ToolTip="{DynamicResource Settings}" Style="{StaticResource ButtonMI}" Command="{Binding Path=OpenSettings}">
                    <Image Width="20" Height="20" Source="/Resources/Pictures/Settings.png"/>
                </Button>
                <Image Width="20" Height="20" Margin="0,0,28,0" ToolTip="{DynamicResource Saved}" Source="/Resources/Pictures/512x512.png" HorizontalAlignment="Right" Visibility="{Binding Document.File.VisibilitySaveLogo}"/>
                <TextBlock Width="20" Height="20" Margin="0,0,28,0" ToolTip="{DynamicResource ChangesMade}" Text="*" HorizontalAlignment="Right" Visibility="{Binding Document.File.VisibilityNeedSaveLogo}" Style="{StaticResource TextBlock}"/>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="0" Background="{Binding Path=Settings.Personalization.MainColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Path=Resizing.TreeViewSize, Mode=TwoWay}" MinWidth="75"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="{Binding Path=Resizing.ContentPanelSize, Mode=TwoWay}" MinWidth="75"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="91*"/>
                        <RowDefinition Height="9*" MaxHeight="120" MinHeight="30"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Visibility="{Binding Document.VisibilitY.FF}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Style="{StaticResource TextBox}" x:Name="S1" TextChanged="TextBox_TextChanged"/>
                        <Button Grid.Column="1" Content="→" Click="Button_Next"/>
                        <Button Grid.Column="2" Content="x" Command="{Binding HideFF}"/>
                    </Grid>
                    <typeXaml:StretchingTreeView Grid.Row="1" ItemsSource="{Binding Path=Document.Data.Paragraphs}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" x:Name="paragraphTree" SelectedItemChanged="ParagraphTree_SelectedItemChanged">
                        <i:Interaction.Behaviors>
                            <rtb:BindableSelectedItemBehavior SelectedItem="{Binding Document.Selected, Mode=TwoWay}" />
                        </i:Interaction.Behaviors>
                        <TreeView.Resources>
                            <SolidColorBrush
                            x:Key="{x:Static SystemColors.ControlBrushKey}" 
                            Color="Transparent" />
                            <SolidColorBrush
                            x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                            Color="LightGray" />
                            <SolidColorBrush
                            x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                            Color="Black" />
                            <HierarchicalDataTemplate ItemsSource="{Binding Path=Paragraphs}" DataType="{x:Type tp:ParagraphH1}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource Header}" />
                                    <TextBlock Grid.Row="1" FontSize="17" Text="{Binding Description}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Path=Paragraphs}" DataType="{x:Type tp:ParagraphH2}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource SubHeader}" />
                                    <TextBlock Grid.Row="1" FontSize="17" Text="{Binding Description}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphList}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource List}" />
                                    <TextBlock Grid.Row="1" FontSize="17" Text="{Binding Description}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphPicture}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource Picture}" />
                                    <TextBlock Grid.Row="1" FontSize="17" Text="{Binding Description}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphTable}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource Table}" />
                                    <TextBlock Grid.Row="1" FontSize="17" Text="{Binding Description}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphCode}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource Code}" />
                                    <TextBlock Grid.Row="1" FontSize="17" Text="{Binding Description}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphText}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource Text}" />
                                    <TextBlock Grid.Row="1" FontSize="17" Text="{Binding Description}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphTitle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource Title}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphTaskSheet}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource TaskSheet}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphListOfReferences}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource ListOfReferences}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type tp:ParagraphAppendix}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" FontWeight="Bold" Text="{DynamicResource Appendix}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <EventSetter Event="TreeViewItem.DragOver" Handler="TreeView_DragOver"/>
                                <EventSetter Event="TreeViewItem.DragEnter" Handler="TreeView_DragOver"/>
                                <EventSetter Event="TreeViewItem.Drop" Handler="TreeView_Drop"/>
                                <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeView_MouseMove"/>
                                <Setter Property="IsExpanded" Value="True" />
                                <Setter Property="AllowDrop" Value="True"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ContextMenu>
                            <ContextMenu ItemContainerStyle="{StaticResource MenuItem}">
                                <MenuItem Header="{DynamicResource InsertBefore}" FontSize="17" ItemContainerStyle="{StaticResource MenuItem}">
                                    <MenuItem Header="{DynamicResource Text}" FontSize="17" Command="{Binding Document.InsertTextBefore}"/>
                                    <MenuItem Header="{DynamicResource Header}" FontSize="17" Command="{Binding Document.InsertHeaderBefore}"/>
                                    <MenuItem Header="{DynamicResource SubHeader}" FontSize="17" Command="{Binding Document.InsertSubHeaderBefore}"/>
                                    <MenuItem Header="{DynamicResource List}" FontSize="17" Command="{Binding Document.InsertListBefore}"/>
                                    <MenuItem Header="{DynamicResource Picture}" FontSize="17" Command="{Binding Document.InsertPictureBefore}"/>
                                    <MenuItem Header="{DynamicResource Table}" FontSize="17" Command="{Binding Document.InsertTableBefore}"/>
                                    <MenuItem Header="{DynamicResource Code}" FontSize="17" Command="{Binding Document.InsertCodeBefore}"/>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource InsertAfter}" FontSize="17" ItemContainerStyle="{StaticResource MenuItem}">
                                    <MenuItem Header="{DynamicResource Text}" FontSize="17" Command="{Binding Document.InsertTextAfter}"/>
                                    <MenuItem Header="{DynamicResource Header}" FontSize="17" Command="{Binding Document.InsertHeaderAfter}"/>
                                    <MenuItem Header="{DynamicResource SubHeader}" FontSize="17" Command="{Binding Document.InsertSubHeaderAfter}"/>
                                    <MenuItem Header="{DynamicResource List}" FontSize="17" Command="{Binding Document.InsertListAfter}"/>
                                    <MenuItem Header="{DynamicResource Picture}" FontSize="17" Command="{Binding Document.InsertPictureAfter}"/>
                                    <MenuItem Header="{DynamicResource Table}" FontSize="17" Command="{Binding Document.InsertTableAfter}"/>
                                    <MenuItem Header="{DynamicResource Code}" FontSize="17" Command="{Binding Document.InsertCodeAfter}"/>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource Delete}" FontSize="17" Command="{Binding Document.DeleteSelected}"/>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </typeXaml:StretchingTreeView>
                    <ComboBox Grid.Row="2" Style="{StaticResource ComboBox1}" SelectedIndex="{Binding Document.AddIndex}" AllowDrop="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=Document.Add}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="DropDownClosed">
                                <i:InvokeCommandAction Command="{Binding Path=Document.ResetAddIndex}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Drop">
                                <i:InvokeCommandAction Command="{Binding Path=DropNotComplexObjects}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="DragOver">
                                <i:InvokeCommandAction Command="{Binding Path=AllowDropNotComplexObjects}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBoxItem Content="{DynamicResource Text}"/>
                        <ComboBoxItem Content="{DynamicResource Header}"/>
                        <ComboBoxItem Content="{DynamicResource SubHeader}"/>
                        <ComboBoxItem Content="{DynamicResource List}"/>
                        <ComboBoxItem Content="{DynamicResource Picture}"/>
                        <ComboBoxItem Content="{DynamicResource Table}"/>
                        <ComboBoxItem Content="{DynamicResource Code}"/>
                    </ComboBox>
                </Grid>
                <GridSplitter Grid.Column="1" Background="Transparent" IsTabStop="True" Width="3" ShowsPreview="False" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DragCompleted">
                            <i:InvokeCommandAction Command="{Binding Path=Resizing.ResizingTreeView}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </GridSplitter>
                <Grid Grid.Column="2">
                    <Grid Visibility="{Binding Path=Document.VisibilitY.UnselectInfo}">
                        <TextBlock Text="{DynamicResource MainClue}" TextWrapping="Wrap" Style="{StaticResource TextBlock}"></TextBlock>
                    </Grid>
                    <Grid Visibility="{Binding Path=Document.VisibilitY.NotComplexObjects}" Margin="2 3 3 3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="100*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Row="0" Text="{Binding Document.Selected.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Document.Selected.DescriptionVisibility}" AllowDrop="True" Style="{StaticResource TextBox}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewDragEnter">
                                    <i:InvokeCommandAction Command="{Binding Path=AllowDrop}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewDragOver">
                                    <i:InvokeCommandAction Command="{Binding Path=AllowDrop}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewDragLeave">
                                    <i:InvokeCommandAction Command="{Binding Path=DisallowDrop}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <Grid Grid.Row="1" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{DynamicResource Content}" Style="{StaticResource TextBlock}"/>
                            <Button Grid.Column="1" Width="30" Height="30" Content="A" ToolTip="{DynamicResource DeleteNumbering}" Margin="5 0 0 0" Visibility="{Binding Document.VisibilitY.AutoList}" Command="{Binding Document.AutoList}"/>
                        </Grid>
                        <Grid Grid.Row="2" Visibility="{Binding Document.VisibilitY.TablePanel}" Background="{Binding Path=Settings.Personalization.MainColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="100*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="25*" MinWidth="10"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="25*" MinWidth="10"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="100*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" TextAlignment="Right" Text = "{DynamicResource Rows}" FontSize="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverterMax},ConverterParameter=38}" Style="{StaticResource TextBlock}"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Margin="3 0 3 0" Text="{Binding Document.Selected.TableData.Rows, UpdateSourceTrigger=PropertyChanged}" CommandManager.PreviewExecuted="TextBox_PreviewExecuted" PreviewTextInput="NumberValidationTextBox" Style="{StaticResource TextBox}"/>
                                <TextBlock Grid.Row="0" Grid.Column="2" TextAlignment="Right" Text="{DynamicResource Columns}" FontSize="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverterMax},ConverterParameter=38}" Style="{StaticResource TextBlock}"/>
                                <TextBox Grid.Row="0" Grid.Column="3" Margin="3 0 0 0" Text="{Binding Document.Selected.TableData.Columns, UpdateSourceTrigger=PropertyChanged}" CommandManager.PreviewExecuted="TextBox_PreviewExecuted" PreviewTextInput="NumberValidationTextBox" Style="{StaticResource TextBox}"/>
                            </Grid>
                            <Grid Grid.Row="1" Grid.Column="0" Margin="0 3 0 0" typeXaml:GridHelpers.Selected="{Binding Document.Selected.TableData}" typeXaml:GridHelpers.RowCount="{Binding Document.Selected.TableData.Rows}" typeXaml:GridHelpers.ColumnCount="{Binding Document.Selected.TableData.Columns}" />
                        </Grid>
                        <Grid Grid.Row="2" Visibility="{Binding Document.VisibilitY.RTBPanel}">
                            <typeXaml:RTBox x:Name="richTextBox" Style="{StaticResource RichTextBox}" Text="{Binding Document.Selected.Data, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SpellCheck.IsEnabled="{Binding Path=Settings.General.SpellCheckRTB,Mode=TwoWay}" PreviewKeyDown="RichTextBox_PreviewKeyDown" AllowDrop="{Binding Document.AllowDropRTB, Mode=TwoWay}" LostFocus="RichTextBox_LostFocus">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewDragEnter">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragOver">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragLeave">
                                        <i:InvokeCommandAction Command="{Binding Path=DisallowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Drop">
                                        <i:InvokeCommandAction Command="{Binding Path=Drop}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </typeXaml:RTBox>
                        </Grid>
                        <Grid Grid.Row="2" Visibility="{Binding Document.VisibilitY.ImagePanel}">
                            <Border Grid.ColumnSpan="2" BorderThickness="3" BorderBrush="White">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewDragEnter">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragOver">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragLeave">
                                        <i:InvokeCommandAction Command="{Binding Path=DisallowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Drop">
                                        <i:InvokeCommandAction Command="{Binding Path=Drop}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border BorderThickness="4" BorderBrush="{Binding Path=Settings.Personalization.AlternativeColor}">
                                    <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}" ToolTip="{DynamicResource DaDImage}">
                                        <Image Source="{Binding Document.Selected.BitmapImage}" Stretch="Fill" />
                                        <ContentControl Background="White" Visibility="{Binding VisibilityDrag}" Style="{StaticResource TheAwesomeXAMLimage}" />
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                    <Grid Visibility="{Binding Document.VisibilitY.TitlePanel}" Background="{Binding Path=Settings.Personalization.MainColor}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="100*"/>
                        </Grid.RowDefinitions>
                        <Grid Margin="10 10 10 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Width="30" Height="30" Grid.Column="0" Margin="0 0 10 0" ToolTip="{DynamicResource ReplacePagePhoto}" IsChecked="{Binding Path=Document.Data.Title.Photo}" Style="{StaticResource RadioButton}">
                                <Image Width="25" Height="30" HorizontalAlignment="Center" Source="/Resources/Pictures/Photo.png"/>
                            </CheckBox>
                            <CheckBox Width="30" Height="30" Grid.Column="1" Content="P" ToolTip="{DynamicResource ManualInput}" IsChecked="{Binding Path=Document.Data.Title.AutoInput}" FontSize="26" Visibility="{Binding Document.Data.Title.VisibitityTitleText}" Style="{StaticResource RadioButton}"/>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0 10 0 0" Visibility="{Binding Document.Data.Title.VisibitityPhoto}">
                            <Border Grid.Row="3" Grid.ColumnSpan="2" BorderThickness="3" BorderBrush="White">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewDragEnter">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragOver">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragLeave">
                                        <i:InvokeCommandAction Command="{Binding Path=DisallowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Drop">
                                        <i:InvokeCommandAction Command="{Binding Path=DropTitle}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border Grid.Row="0" Grid.Column="1" BorderThickness="4" BorderBrush="{Binding Path=Settings.Personalization.AlternativeColor}">
                                    <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}" ToolTip="{DynamicResource DaDImage}">
                                        <TextBlock Text="{DynamicResource PictureClue}" TextWrapping="Wrap" Style="{StaticResource TextBlock}"/>
                                        <Image Source="{Binding Document.Data.Title.Picture.BitmapImage}" Stretch="Fill" />
                                        <ContentControl Background="White" Visibility="{Binding VisibilityDrag}" Style="{StaticResource TheAwesomeXAMLimage}" />
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                        <ScrollViewer Margin="10 0 0 0" Grid.Row="1" Visibility="{Binding Document.Data.Title.VisibitityTitleText}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Margin="0 15 0 15" Visibility="{Binding Document.Data.Title.VisibitityFaculty}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{DynamicResource Faculty}" Margin="0 0 10 0" Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Center"/>
                                        <Button Width="20" Height="20" Grid.Column="1" ToolTip="{DynamicResource RefreshAllData}" Visibility="{Binding Document.Data.Title.VisibitityAutoInput}" Command="{Binding Document.Data.Title.UpdateFaculty}">
                                            <Image Source="/Resources/Pictures/Update.png"/>
                                        </Button>
                                    </Grid>
                                    <ComboBox Grid.Row="1" ItemsSource="{Binding Document.Data.Title.FacultyItems}" SelectedValue="{Binding Path=Document.Data.Title.Faculty}" Visibility="{Binding Document.Data.Title.VisibitityAutoInput}"/>
                                    <TextBox Grid.Row="1" Text="{Binding Path=Document.Data.Title.Faculty}" Visibility="{Binding Document.Data.Title.VisibitityManualInput}" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="1" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityFaculty}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{DynamicResource Cathedra}" Margin="0 0 10 0" Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Center"/>
                                        <Button Width="20" Height="20" Grid.Column="1" ToolTip="{DynamicResource RefreshAllData}" Visibility="{Binding Document.Data.Title.VisibitityAutoInput}" Command="{Binding Document.Data.Title.UpdateCathedra}">
                                            <Image Source="/Resources/Pictures/Update.png"/>
                                        </Button>
                                    </Grid>
                                    <ComboBox Grid.Row="1" ItemsSource="{Binding Document.Data.Title.CathedraItems}" SelectedValue="{Binding Path=Document.Data.Title.Cathedra}" Text="{Binding Path=Document.Data.Title.Cathedra}" Visibility="{Binding Document.Data.Title.VisibitityAutoInput}"/>
                                    <TextBox Grid.Row="1" Text="{Binding Path=Document.Data.Title.Cathedra}" Visibility="{Binding Document.Data.Title.VisibitityManualInput}" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="2" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityPerformed}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource Completed}" Margin="0 0 10 0" Style="{StaticResource TextBlockTitle}"/>
                                        <Button Width="20" Height="20" Grid.Column="1" ToolTip="{DynamicResource LoadUsers}" Command="{Binding UpdatePerformed}">
                                            <Image Source="/Resources/Pictures/Update.png"/>
                                        </Button>
                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100*"/>
                                        </Grid.ColumnDefinitions>
                                        <ListBox ItemsSource="{Binding Document.Data.Title.Performed}">
                                            <ListBox.ItemTemplate>
                                                <HierarchicalDataTemplate>
                                                    <CheckBox Content="{Binding Full}" IsChecked="{Binding AutoSelected}" Style="{StaticResource CheckBox}"/>
                                                </HierarchicalDataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="3" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityNumber}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="№" Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Center"/>
                                    <TextBox Grid.Row="1" Text="{Binding Path=Document.Data.Title.Number}" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="4" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityTheme}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="{DynamicResource Theme}" Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Center"/>
                                    <TextBox Grid.Row="1" Text="{Binding Path=Document.Data.Title.Theme}" Grid.ColumnSpan="3" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="5" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityDiscipline}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="{DynamicResource Discipline}" Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Center"/>
                                    <TextBox Grid.Row="1" Text="{Binding Path=Document.Data.Title.Discipline}" Grid.ColumnSpan="3" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="6" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityProfessor}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{DynamicResource Lecturer}" Margin="0 0 10 0"  Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Center"/>
                                        <Button Width="20" Height="20" Grid.Column="1" ToolTip="{DynamicResource RefreshAllData}" Visibility="{Binding Document.Data.Title.VisibitityAutoInput}" Command="{Binding Document.Data.Title.UpdateProfessor}">
                                            <Image Source="/Resources/Pictures/Update.png"/>
                                        </Button>
                                    </Grid>
                                    <ComboBox Grid.Row="1" ItemsSource="{Binding Document.Data.Title.ProfessorItems}" SelectedValue="{Binding Path=Document.Data.Title.Professor}" Visibility="{Binding Path=Document.Data.Title.VisibitityAutoInput, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="1" Text="{Binding Path=Document.Data.Title.Professor,Mode=TwoWay}" Visibility="{Binding Path=Document.Data.Title.VisibitityManualInput}" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="7" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityRank}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{DynamicResource FacultyPosition}" Margin="0 0 10 0" Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Center"/>
                                        <Button Width="20" Height="20" Grid.Column="1" ToolTip="{DynamicResource RefreshAllData}" Visibility="{Binding Document.Data.Title.VisibitityAutoInput}" Command="{Binding Document.Data.Title.UpdateRank}">
                                            <Image Source="/Resources/Pictures/Update.png"/>
                                        </Button>
                                    </Grid>
                                    <TextBox Grid.Row="1" Text="{Binding Path=Document.Data.Title.Rank}" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="8" Margin="0 0 0 15" Visibility="{Binding Document.Data.Title.VisibitityType}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="30"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="{DynamicResource Type}" Style="{StaticResource TextBlockTitle}"/>
                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15*"/>
                                            <ColumnDefinition Width="35*"/>
                                            <ColumnDefinition Width="35*"/>
                                            <ColumnDefinition Width="15*"/>
                                        </Grid.ColumnDefinitions>
                                        <RadioButton Grid.Column="1" IsChecked="{Binding Path=Document.Data.Title.Work}" Margin="2,0,0,0" Content="{DynamicResource Coursework}" Style="{StaticResource RadioButton}"/>
                                        <RadioButton Grid.Column="2" IsChecked="{Binding Path=Document.Data.Title.Project}" Margin="2,0,2,0" Content="{DynamicResource CourseProject}" Style="{StaticResource RadioButton}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                    <Grid Visibility="{Binding Document.VisibilitY.TaskSheetPanel}" Background="{Binding Path=Settings.Personalization.MainColor}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="100*"/>
                        </Grid.RowDefinitions>
                        <Grid Margin="10 10 10 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Width="30" Height="30" Grid.Column="0" Margin="0 0 10 0" ToolTip="{DynamicResource ReplacePagePhoto}" IsChecked="{Binding Path=Document.Data.TaskSheet.Photo}" Style="{StaticResource RadioButton}">
                                <Image Width="25" Height="30" HorizontalAlignment="Center" Source="/Resources/Pictures/Photo.png"/>
                            </CheckBox>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0 10 0 0" Visibility="{Binding Document.Data.TaskSheet.VisibitityPhoto}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderThickness="3" BorderBrush="White">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewDragEnter">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragOver">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragLeave">
                                        <i:InvokeCommandAction Command="{Binding Path=DisallowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Drop">
                                        <i:InvokeCommandAction Command="{Binding Path=DropTaskSheet1}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border Grid.Row="0" Grid.Column="1" BorderThickness="4" BorderBrush="{Binding Path=Settings.Personalization.AlternativeColor}">
                                    <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}" ToolTip="{DynamicResource DaDImage}">
                                        <TextBlock Text="{DynamicResource FirstPage}" TextWrapping="Wrap" Style="{StaticResource TextBlock}"/>
                                        <Image Source="{Binding Document.Data.TaskSheet.FirstPicture.BitmapImage}" Stretch="Fill" />
                                        <ContentControl Background="White" Visibility="{Binding VisibilityDrag}" Style="{StaticResource TheAwesomeXAMLimage}" />
                                    </Grid>
                                </Border>
                            </Border>
                            <Border Grid.Column="1" BorderThickness="3" BorderBrush="White">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewDragEnter">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragOver">
                                        <i:InvokeCommandAction Command="{Binding Path=AllowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewDragLeave">
                                        <i:InvokeCommandAction Command="{Binding Path=DisallowDropImage}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Drop">
                                        <i:InvokeCommandAction Command="{Binding Path=DropTaskSheet2}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border Grid.Row="0" Grid.Column="1" BorderThickness="4" BorderBrush="{Binding Path=Settings.Personalization.AlternativeColor}">
                                    <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}" ToolTip="{DynamicResource DaDImage}">
                                        <TextBlock Text="{DynamicResource SecondPage}" TextWrapping="Wrap" Style="{StaticResource TextBlock}"/>
                                        <Image Source="{Binding Document.Data.TaskSheet.SecondPicture.BitmapImage}" Stretch="Fill" />
                                        <ContentControl Background="White" Visibility="{Binding VisibilityDrag}" Style="{StaticResource TheAwesomeXAMLimage}" />
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                        <ScrollViewer Grid.Row="1" Margin="10 0 0 0"  Visibility="{Binding Document.Data.TaskSheet.VisibitityTitleText}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Margin="0 15 0 15">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="{DynamicResource SourceData}" TextWrapping="Wrap" Style="{StaticResource TextBlockTitle}"/>
                                    <TextBox TextWrapping="Wrap" Text="{Binding Path=Document.Data.TaskSheet.SourceData}" AcceptsReturn="True" Grid.Row="1" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="1" Margin="0 0 0 15">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="{DynamicResource TOC}" TextWrapping="Wrap" Style="{StaticResource TextBlockTitle}"/>
                                    <TextBox TextWrapping="Wrap" Text="{Binding Path=Document.Data.TaskSheet.TOC}" AcceptsReturn="True" Grid.Row="1" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                                <Grid Grid.Row="2" Margin="0 0 0 15">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource ReportingMaterial}" TextWrapping="Wrap" Style="{StaticResource TextBlockTitle}"/>
                                    <TextBox TextWrapping="Wrap" Text="{Binding Path=Document.Data.TaskSheet.ReportingMaterial}" AcceptsReturn="True" Grid.Row="1" Style="{StaticResource TextBoxRounded}"/>
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                    <ScrollViewer Margin="10 0 0 0" Visibility="{Binding Document.VisibilitY.ListOfReferencesPanel}" Background="{Binding Path=Settings.Personalization.MainColor}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Margin="0 15 0 15">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="{DynamicResource Type}" Style="{StaticResource TextBlockTitle}"/>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="15*"/>
                                        <ColumnDefinition Width="35*"/>
                                        <ColumnDefinition Width="35*"/>
                                        <ColumnDefinition Width="15*"/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton Grid.Column="1" IsChecked="{Binding Path=Document.Data.ListOfReferences.Bibliography}" Margin="2,0,0,0" Content="{DynamicResource Bibliography}" Style="{StaticResource RadioButton}"/>
                                    <RadioButton Grid.Column="2" IsChecked="{Binding Path=Document.Data.ListOfReferences.ListSourcesUsed}" Margin="2,0,2,0" Content="{DynamicResource ListSourcesUsed}" Style="{StaticResource RadioButton}"/>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="1" Margin="0 0 0 15">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource Add}" TextWrapping="Wrap" Style="{StaticResource TextBlockTitle}"/>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="15*"/>
                                        <ColumnDefinition Width="30*"/>
                                        <ColumnDefinition Width="10*"/>
                                        <ColumnDefinition Width="30*"/>
                                        <ColumnDefinition Width="15*"/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton Grid.Column="1" IsChecked="{Binding Document.Data.ListOfReferences.OpenBooks}" Margin="2,0,0,0" Content="{DynamicResource Book}" Style="{StaticResource RadioButton}"/>
                                    <Button Grid.Column="2" Margin="2,0,0,0" Content="+" Command="{Binding Document.Data.ListOfReferences.Add}"/>
                                    <RadioButton Grid.Column="3" IsChecked="{Binding Document.Data.ListOfReferences.OpenElectronicResources}" Margin="2,0,2,0" Content="{DynamicResource ElectronicResources}" Style="{StaticResource RadioButton}"/>
                                </Grid>
                            </Grid>
                            <DataGrid Grid.Row="2" Grid.Column="0" ItemsSource="{Binding Document.Data.ListOfReferences.Books}" Visibility="{Binding Document.Data.ListOfReferences.VisibilityBooks}" Style="{StaticResource DGStandart}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="CellEditEnding">
                                        <i:InvokeCommandAction Command="{Binding Path=Document.Data.ListOfReferences.EditCell}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{DynamicResource Autors}" Binding="{Binding Autors}" Width="20*"/>
                                    <DataGridTextColumn Header="{DynamicResource Name}" Binding="{Binding Name}" Width="20*"/>
                                    <DataGridTextColumn Header="{DynamicResource Publication}" Binding="{Binding Publication}" Width="20*"/>
                                    <DataGridTextColumn Header="{DynamicResource Year}" Binding="{Binding Year}" Width="20*"/>
                                    <DataGridTextColumn Header="{DynamicResource Page}" Binding="{Binding Page}" Width="20*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <DataGrid Grid.Row="2" Grid.Column="0" ItemsSource="{Binding Document.Data.ListOfReferences.ElectronicResources}" Visibility="{Binding Document.Data.ListOfReferences.VisibilityElectronicResources}" Style="{StaticResource DGStandart}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="CellEditEnding">
                                        <i:InvokeCommandAction Command="{Binding Path=Document.Data.ListOfReferences.EditCell}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{DynamicResource Name}" Binding="{Binding Name}" Width="33*"/>
                                    <DataGridTextColumn Header="{DynamicResource Url}" Binding="{Binding Url}" Width="33*"/>
                                    <DataGridTextColumn Header="{DynamicResource CirculationDate}" Binding="{Binding CirculationDate}" Width="33*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </ScrollViewer>
                    <Grid Visibility="{Binding Document.VisibilitY.AppendixPanel}" Background="{Binding Path=Settings.Personalization.MainColor}">
                        <Grid Margin="10 15 10 15" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="100*"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <ComboBox Grid.Row="0" Style="{StaticResource ComboBox1}" SelectedIndex="{Binding Document.Data.Appendix.AddIndex}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding Path=Document.Data.Appendix.Add}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="DropDownClosed">
                                        <i:InvokeCommandAction Command="{Binding Path=Document.Data.Appendix.ResetAddIndex}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBoxItem Content="{DynamicResource Picture}"/>
                                <ComboBoxItem Content="{DynamicResource Table}"/>
                                <ComboBoxItem Content="{DynamicResource Code}"/>
                            </ComboBox>
                            <gu:FlipView Grid.Row="1" Margin="0 0 0 15" ArrowPlacement="InsideTop" ItemsSource="{Binding Document.Data.Appendix.Appendix}" SelectedItem="{Binding Document.Data.Appendix.Selected}">
                                <gu:FlipView.Resources>
                                    <DataTemplate DataType="{x:Type tp:ParagraphCode}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="100*"/>
                                            </Grid.RowDefinitions>
                                            <TextBox Grid.Row="0" Style="{StaticResource TextBox}" Text="{Binding Description}" AllowDrop="True"/>
                                            <TextBlock Grid.Row="1" Text="{DynamicResource Content}" Style="{StaticResource TextBlock}"/>
                                            <typeXaml:RTBox Grid.Row="2" Style="{StaticResource RichTextBox}" Text="{Binding Data}" SpellCheck.IsEnabled="False" AllowDrop="True">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewDragEnter">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.AllowDropImage}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewDragOver">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.AllowDropImage}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewDragLeave">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.DisallowDropImage}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Drop">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.DropAppendix}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </typeXaml:RTBox>
                                        </Grid>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type tp:ParagraphPicture}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="100*"/>
                                            </Grid.RowDefinitions>
                                            <TextBox Grid.Row="0" Style="{StaticResource TextBox}" Text="{Binding Description}" AllowDrop="True">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewDragEnter">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.AllowDrop}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewDragOver">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.AllowDrop}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewDragLeave">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.DisallowDrop}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                            <TextBlock Grid.Row="1" Text="{DynamicResource Content}" Style="{StaticResource TextBlock}"/>
                                            <Border Grid.Row="2" BorderThickness="3" BorderBrush="White" AllowDrop="True">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="DragEnter">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.AllowDropImage}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="DragOver">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.AllowDropImage}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="DragLeave">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.DisallowDropImage}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Drop">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.DropAppendix}" PassEventArgsToCommand="True"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Border BorderThickness="4" BorderBrush="{Binding Path=DataContext.Settings.Personalization.AlternativeColor, ElementName=root}">
                                                    <Grid Background="{Binding Path=DataContext.Settings.Personalization.AdditionalColor, ElementName=root}" ToolTip="{DynamicResource DaDImage}">
                                                        <Image Source="{Binding BitmapImage}" Stretch="Fill" />
                                                        <ContentControl Background="White" Visibility="{Binding ElementName=root, Path=DataContext.VisibilityDrag}" Style="{StaticResource TheAwesomeXAMLimage}"/>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type tp:ParagraphTable}">
                                        <Grid Grid.Row="3">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="100*"/>
                                            </Grid.RowDefinitions>
                                            <TextBox Grid.Row="0" Style="{StaticResource TextBox}" Text="{Binding Description}" AllowDrop="True" />
                                            <TextBlock Grid.Row="1" Text="{DynamicResource Content}" Style="{StaticResource TextBlock}"/>
                                            <Grid Grid.Row="2" Background="{Binding Path=Settings.Personalization.MainColor}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="100*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition Height="100*"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0" Grid.Column="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="25*" MinWidth="10"/>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="25*" MinWidth="10"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="100*"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="0" Grid.Column="0" TextAlignment="Right" Text = "{DynamicResource Rows}" FontSize="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverterMax},ConverterParameter=38}" Style="{StaticResource TextBlock}"/>
                                                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3 0 3 0" Text="{Binding TableData.Rows, UpdateSourceTrigger=PropertyChanged}" CommandManager.PreviewExecuted="TextBox_PreviewExecuted" PreviewTextInput="NumberValidationTextBox" Style="{StaticResource TextBox}"/>
                                                    <TextBlock Grid.Row="0" Grid.Column="2" TextAlignment="Right" Text="{DynamicResource Columns}" FontSize="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverterMax},ConverterParameter=38}" Style="{StaticResource TextBlock}"/>
                                                    <TextBox Grid.Row="0" Grid.Column="3" Margin="3 0 0 0" Text="{Binding TableData.Columns, UpdateSourceTrigger=PropertyChanged}" CommandManager.PreviewExecuted="TextBox_PreviewExecuted" PreviewTextInput="NumberValidationTextBox" Style="{StaticResource TextBox}"/>
                                                </Grid>
                                                <Grid typeXaml:GridHelpers.Selected="{Binding TableData}" typeXaml:GridHelpers.RowCount="{Binding TableData.Rows}" typeXaml:GridHelpers.ColumnCount="{Binding TableData.Columns}" Grid.Row="1" Grid.Column="0"/>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </gu:FlipView.Resources>
                            </gu:FlipView>
                            <Button Grid.Row="2" Content="{DynamicResource DeleteСurrent}" Command="{Binding Document.Data.Appendix.Delete}"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid Visibility="{Binding Path=VisibilitySettingsPanel}">
            <Grid.RowDefinitions>
                <RowDefinition Height="10*" MinHeight="45"/>
                <RowDefinition Height="90*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="2 5 2 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                </Grid.ColumnDefinitions>
                <RadioButton Style="{StaticResource RadioButton}" IsChecked="True" Grid.Column="0" Margin="2,0,2,0" Content="{DynamicResource GeneralSettings}" Command="{Binding Path=Settings.OpenGeneral}"/>
                <RadioButton Style="{StaticResource RadioButton}" Grid.Column="1" Margin="2,0,2,0" Content="{DynamicResource PersonalizationSettings}" Command="{Binding Path=Settings.OpenPersonalization}"/>
                <RadioButton Style="{StaticResource RadioButton}" Grid.Column="2" Margin="2,0,2,0" Content="{DynamicResource ProfileSettings}" Command="{Binding Path=Settings.OpenProfile}"/>
                <RadioButton Style="{StaticResource RadioButton}" Grid.Column="3" Margin="2,0,2,0" Content="{DynamicResource Styles}" Command="{Binding Path=Settings.OpenTemplates}"/>
                <Button Grid.Column="4" Margin="2,0,2,0" Content="{DynamicResource BackSettings}" Command="{Binding Path=ExitSettings}"/>
            </Grid>
            <ScrollViewer Grid.Row="1" Visibility="{Binding Path=Settings.VisibilityGeneral}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" MinHeight="100"/>
                        <RowDefinition Height="auto" MinHeight="100"/>
                        <RowDefinition Height="auto" MinHeight="100"/>
                        <RowDefinition Height="auto" MinHeight="100"/>
                        <RowDefinition Height="auto" MinHeight="100"/>
                        <RowDefinition Height="auto" MinHeight="100"/>
                        <RowDefinition Height="auto" MinHeight="100"/>
                        <RowDefinition Height="10"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                        <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" TextAlignment="Right" Text="{DynamicResource IsAssociate}" Style="{StaticResource TextBlock}"/>
                            <CheckBox Grid.Row="0" Grid.Column="1" Margin="10 0 0 0" HorizontalAlignment="Left" IsChecked="{Binding Path=Settings.General.AssociationWKR}">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" ScaleY="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" />
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                        </Grid>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                        <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" TextAlignment="Right" Text="{DynamicResource AutoSave}" Style="{StaticResource TextBlock}"/>
                            <CheckBox Grid.Row="0" Grid.Column="1" Margin="10 0 0 0" HorizontalAlignment="Left" IsChecked="{Binding Path=Document.AutoSave}">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" ScaleY="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" />
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                        </Grid>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                        <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" TextAlignment="Right" Text="{DynamicResource IsSyntaxChecking}" Style="{StaticResource TextBlock}"/>
                            <CheckBox Grid.Row="0" Grid.Column="1" Margin="10 0 0 0" HorizontalAlignment="Left" IsChecked="{Binding Path=Settings.General.SyntaxChecking}">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" ScaleY="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" />
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                        </Grid>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                        <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" TextAlignment="Right" Text="{DynamicResource Encoding}" Style="{StaticResource TextBlock}"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="{Binding Path=Settings.General.EncodingIndex}" VerticalAlignment="Center" MinWidth="160" Margin="10 0 10 0" HorizontalAlignment="Left" HorizontalContentAlignment="Center">
                                <ComboBoxItem Content="{DynamicResource Encoding0}"/>
                                <ComboBoxItem Content="{DynamicResource Encoding1}"/>
                            </ComboBox>
                        </Grid>
                    </Border>
                    <Border Grid.Row="4" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                        <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" TextAlignment="Right" Text="{DynamicResource AfterExportingClose}" Style="{StaticResource TextBlock}"/>
                            <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding Path=Settings.General.CloseWindow}" Margin="10 0 0 0" HorizontalAlignment="Left">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" ScaleY="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" />
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                        </Grid>
                    </Border>
                    <Border Grid.Row="5" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                        <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" TextAlignment="Right" Text="{DynamicResource IsAutoHeader}" Style="{StaticResource TextBlock}"/>
                            <CheckBox Grid.Row="0" Grid.Column="1" Margin="10 0 0 0" HorizontalAlignment="Left" IsChecked="{Binding Path=Settings.General.AutoHeader}">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" ScaleY="{Binding Path=Settings.Personalization.FontSize,Converter={StaticResource fontConverter},ConverterParameter=1}" />
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                        </Grid>
                    </Border>
                    <Border Grid.Row="6" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                        <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="33*"/>
                                <ColumnDefinition Width="34*"/>
                                <ColumnDefinition Width="33*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                                <RowDefinition Height="75*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource FileSettings}" TextWrapping="NoWrap" HorizontalAlignment="Center" TextAlignment="Center" Style="{StaticResource TextBlock}"/>
                            <Button Grid.Row="1" Grid.Column="0" Content="{DynamicResource Open}" ToolTip="{DynamicResource OpensFolder}" Margin="5 5 5 5" Command="{Binding Settings.General.Commands.ConfigFileOpen}"/>
                            <Button Grid.Row="1" Grid.Column="1" Content="{DynamicResource Delete}" ToolTip="{DynamicResource DeletesFile}" Margin="0 5 5 5" Command="{Binding Settings.General.Commands.ConfigFileDelete}"/>
                            <Button Grid.Row="1" Grid.Column="2" Content="{DynamicResource DeleteAll}" ToolTip="{DynamicResource DeletesAllFile}" Margin="0 5 5 5" Command="{Binding Settings.General.Commands.ConfigFileDeleteAll}"/>
                        </Grid>
                    </Border>
                </Grid>
            </ScrollViewer>
            <Grid Grid.Row="1" Visibility="{Binding Path=Settings.VisibilityPersonalization}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="75"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="100*"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Grid.Column="0" Style="{StaticResource BorderGroupBox}" Margin="10 10 10 0">
                    <Grid Background="{Binding Path=Settings.Personalization.AdditionalColor}">
                        <Button Grid.Row="0" Grid.Column="0" Content="{DynamicResource ByDefault}" ToolTip="{DynamicResource DefaultValues}" Command="{Binding Settings.Personalization.ByDefault}"/>
                    </Grid>
                </Border>
                <ScrollViewer Grid.Row="2" Grid.Column="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" MinHeight="100"/>
                            <RowDefinition Height="auto" MinHeight="100"/>
                            <RowDefinition Height="auto" MinHeight="100"/>
                            <RowDefinition Height="auto" MinHeight="100"/>
                            <RowDefinition Height="auto" MinHeight="100"/>
                            <RowDefinition Height="auto" MinHeight="100"/>
                            <RowDefinition Height="auto" MinHeight="100"/>
                            <RowDefinition Height="10"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource MainColor}" VerticalAlignment="Bottom" Style="{StaticResource TextBlock}"/>
                                <xctk:ColorPicker Grid.Row="1" Width="250" MaxHeight="30" HorizontalAlignment="Center" SelectedColor="{Binding Path=Settings.Personalization.MainColor}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Closed">
                                            <i:InvokeCommandAction Command="{Binding Path=Settings.Personalization.ClosingMainColor}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </xctk:ColorPicker>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource ComplementaryСolor}" VerticalAlignment="Bottom" Style="{StaticResource TextBlock}"/>
                                <xctk:ColorPicker Grid.Row="1" Width="250" MaxHeight="30" HorizontalAlignment="Center" SelectedColor="{Binding Path=Settings.Personalization.AdditionalColor}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Closed">
                                            <i:InvokeCommandAction Command="{Binding Path=Settings.Personalization.ClosingAdditionalColor}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </xctk:ColorPicker>
                            </Grid>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource AlternativeСolor}" VerticalAlignment="Bottom" Style="{StaticResource TextBlock}"/>
                                <xctk:ColorPicker Grid.Row="1" Width="250" MaxHeight="30" HorizontalAlignment="Center" Grid.Column="1" SelectedColor="{Binding Path=Settings.Personalization.AlternativeColor}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Closed">
                                            <i:InvokeCommandAction Command="{Binding Path=Settings.Personalization.ClosingAlternativeColor}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </xctk:ColorPicker>
                            </Grid>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource HoverColor}" VerticalAlignment="Bottom" Style="{StaticResource TextBlock}"/>
                                <xctk:ColorPicker Grid.Row="1" Width="250" MaxHeight="30" HorizontalAlignment="Center" SelectedColor="{Binding Path=Settings.Personalization.HoverColor}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Closed">
                                            <i:InvokeCommandAction Command="{Binding Path=Settings.Personalization.ClosingHoverColor}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </xctk:ColorPicker>
                            </Grid>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource ActiveColor}" VerticalAlignment="Bottom" Style="{StaticResource TextBlock}"/>
                                <xctk:ColorPicker Grid.Row="1" Width="250" MaxHeight="30" HorizontalAlignment="Center" SelectedColor="{Binding Path=Settings.Personalization.ActiveColor}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Closed">
                                            <i:InvokeCommandAction Command="{Binding Path=Settings.Personalization.ClosingActiveColor}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </xctk:ColorPicker>
                            </Grid>
                        </Border>
                        <Border Grid.Row="4" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource FontSize}" VerticalAlignment="Bottom" Style="{StaticResource TextBlock}"/>
                                <Slider Grid.Row="1" IsSnapToTickEnabled="True" HorizontalAlignment="Center" Value="{Binding Path=Settings.Personalization.FontSize}" TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight" Minimum="0" Maximum="48" MinWidth="250" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <Border Grid.Row="5" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" VerticalAlignment="Bottom" Text="{DynamicResource FontSizeRTB}" Style="{StaticResource TextBlock}"/>
                                <Slider Grid.Row="1" IsSnapToTickEnabled="True" Value="{Binding Path=Settings.Personalization.FontSizeRTB}" HorizontalAlignment="Center" TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight" Minimum="0" Maximum="48" MinWidth="250" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <Border Grid.Row="6" Grid.Column="0" Background="{Binding Path=Settings.Personalization.AdditionalColor}" Style="{StaticResource BorderGroupBox}" Margin="10 10 0 0">
                            <Grid HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45*"/>
                                    <RowDefinition Height="55*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource Language}" VerticalAlignment="Bottom" Style="{StaticResource TextBlock}"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" MinWidth="250"  SelectedIndex="{Binding Path=Settings.Personalization.Language}" HorizontalAlignment="Center">
                                    <ComboBoxItem>Русский</ComboBoxItem>
                                    <ComboBoxItem>English</ComboBoxItem>
                                    <ComboBoxItem>Беларускі</ComboBoxItem>
                                    <ComboBoxItem>Français</ComboBoxItem>
                                    <ComboBoxItem>Deutsch</ComboBoxItem>
                                    <ComboBoxItem>中文</ComboBoxItem>
                                </ComboBox>
                            </Grid>
                        </Border>
                    </Grid>
                </ScrollViewer>
            </Grid>
            <Grid Grid.Row="1" Visibility="{Binding Path=Settings.VisibilityProfile}">
                <GroupBox Margin="10 10 10 10">
                    <GroupBox.Header>
                        <ComboBox Margin="0 10 0 10" SelectedIndex="{Binding Settings.Profile.SelectedCategory}">
                            <ComboBoxItem IsSelected="True" Content="{DynamicResource GeneralSettings}"/>
                            <ComboBoxItem Content="{DynamicResource Users}"/>
                        </ComboBox>
                    </GroupBox.Header>
                    <Grid>
                        <Grid Visibility="{Binding Path=Settings.Profile.VisibitityCategoryGeneral}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="100*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="1">
                                <CheckBox Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 0 10" Grid.ColumnSpan="5" Content="Р" ToolTip="{DynamicResource ManualInput}" IsChecked="{Binding Path=Settings.Profile.AutoInput}" FontSize="26" Style="{StaticResource RadioButton}"/>
                            </Grid>
                            <ScrollViewer Grid.Row="0">
                                <Grid Margin="10 0 0 0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="100*"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Margin="0 0 0 15">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource Universitet}" Style="{StaticResource TextBlock}"/>
                                        </Grid>
                                        <ComboBox Grid.Row="1" ItemsSource="{Binding Path=Settings.Profile.UniversitetItems}" SelectedValue="{Binding Path=Settings.Profile.Universitet}" Visibility="{Binding Path=Settings.Profile.VisibilityAutoInput}"/>
                                        <TextBox Grid.Row="1" Text="{Binding Path=Settings.Profile.Universitet}" Visibility="{Binding Path=Settings.Profile.VisibilityManualInput}" Style="{StaticResource TextBoxRounded}"/>
                                    </Grid>
                                    <Grid Grid.Row="1" Margin="0 0 0 15">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" TextAlignment="Right" Text="{DynamicResource Faculty}" Style="{StaticResource TextBlock}"/>
                                            <Button Grid.Column="1" Width="20" Height="20" Margin="10 0 0 0" ToolTip="{DynamicResource RefreshAllData}" Visibility="{Binding Path=Settings.Profile.VisibilityAutoInput}" Command="{Binding Settings.Profile.UpdateFaculty}">
                                                <Image Source="/Resources/Pictures/Update.png"/>
                                            </Button>
                                        </Grid>
                                        <ComboBox Grid.Row="1" Grid.Column="2" ItemsSource="{Binding Path=Settings.Profile.FacultyItems}" SelectedValue="{Binding Path=Settings.Profile.Faculty}" Visibility="{Binding Path=Settings.Profile.VisibilityAutoInput}"/>
                                        <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Path=Settings.Profile.Faculty}" Visibility="{Binding Path=Settings.Profile.VisibilityManualInput}" Style="{StaticResource TextBoxRounded}"/>
                                    </Grid>
                                    <Grid Grid.Row="2" Margin="0 0 0 15">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" TextAlignment="Right" Text="{DynamicResource Cours}" Style="{StaticResource TextBlock}"/>
                                            <Button Grid.Column="1" Width="20" Height="20" Margin="10 0 0 0" ToolTip="{DynamicResource RefreshAllData}" Visibility="{Binding Path=Settings.Profile.VisibilityAutoInput}" Command="{Binding Settings.Profile.UpdateCours}">
                                                <Image Source="/Resources/Pictures/Update.png"/>
                                            </Button>
                                        </Grid>
                                        <ComboBox Grid.Row="1" Grid.Column="2" ItemsSource="{Binding Path=Settings.Profile.CoursItems}" SelectedValue="{Binding Path=Settings.Profile.Cours}" Visibility="{Binding Path=Settings.Profile.VisibilityAutoInput}"/>
                                        <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Path=Settings.Profile.Cours}" Visibility="{Binding Path=Settings.Profile.VisibilityManualInput}" Style="{StaticResource TextBoxRounded}"/>
                                    </Grid>
                                    <Grid Grid.Row="3" Margin="0 0 0 15">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" TextAlignment="Right" Text="{DynamicResource Group}" Style="{StaticResource TextBlock}"/>
                                            <Button Grid.Row="0" Grid.Column="1" Width="20" Height="20" Margin="10 0 0 0" ToolTip="{DynamicResource RefreshAllData}" Visibility="{Binding Path=Settings.Profile.VisibilityAutoInput}" Command="{Binding Settings.Profile.UpdateGroup}">
                                                <Image Source="/Resources/Pictures/Update.png"/>
                                            </Button>
                                        </Grid>
                                        <ComboBox Grid.Row="1" Grid.Column="2" ItemsSource="{Binding Path=Settings.Profile.GroupItems}" SelectedValue="{Binding Path=Settings.Profile.Group}" Visibility="{Binding Path=Settings.Profile.VisibilityAutoInput}"/>
                                        <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Path=Settings.Profile.Group}" Visibility="{Binding Path=Settings.Profile.VisibilityManualInput}" Style="{StaticResource TextBoxRounded}"/>
                                    </Grid>
                                    <Grid Grid.Row="4" Margin="0 0 0 15">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" TextAlignment="Right" Text="{DynamicResource Direction}" Style="{StaticResource TextBlock}"/>
                                        </Grid>
                                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=Settings.Profile.Direction}" Style="{StaticResource TextBoxRounded}"/>
                                    </Grid>
                                    <Grid Grid.Row="5" Margin="0 0 0 15">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource Year}" TextAlignment="Right" Style="{StaticResource TextBlockTitle}"/>
                                            <Button Grid.Row="0" Grid.Column="1" Width="20" Height="20" Margin="10 0 0 0" ToolTip="{DynamicResource SetYear}" Command="{Binding Settings.Profile.UpdateYear}">
                                                <Image Source="/Resources/Pictures/Update.png"/>
                                            </Button>
                                        </Grid>
                                        <TextBox Grid.Row="1" Text="{Binding Path=Settings.Profile.Year}" Style="{StaticResource TextBoxRounded}"/>
                                    </Grid>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                        <Grid Visibility="{Binding Path=Settings.Profile.VisibitityCategoryUsers}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="100*"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Content="+" Command="{Binding Settings.Profile.Add}"/>
                            <DataGrid Grid.Row="1" ItemsSource="{Binding Settings.Profile.Users}" Style="{StaticResource DGStandart}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="CellEditEnding">
                                        <i:InvokeCommandAction Command="{Binding Path=Settings.Profile.EditPartnersCell}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{DynamicResource LastName}" Binding="{Binding LastName, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                    <DataGridTextColumn Header="{DynamicResource FirstName}" Binding="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                    <DataGridTextColumn Header="{DynamicResource MiddleName}" Binding="{Binding MiddleName, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                    <DataGridTextColumn Header="{DynamicResource Shifr}" Binding="{Binding Shifr, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                    <DataGridCheckBoxColumn Header="{DynamicResource AutoPerformed}" Binding="{Binding AutoSelected, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </GroupBox>
            </Grid>
            <Grid Grid.Row="1" Visibility="{Binding Path=Settings.VisibilityTemplates}">
                <gu:FlipView Margin="0 0 0 0" ArrowPlacement="InsideTop" ItemsSource="{Binding Settings.Template.TemplateType}">
                    <gu:FlipView.Resources>
                        <DataTemplate DataType="{x:Type t:TemplateType}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Margin="0 0 0 10" Text="{Binding Path=Type, Converter={StaticResource dtl}}" Style="{StaticResource TextBlock}"/>
                                <DataGrid Grid.Row="1" ItemsSource="{Binding Templates}" Style="{StaticResource DGStandart}" CanUserDeleteRows="False">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="CellEditEnding">
                                            <i:InvokeCommandAction Command="{Binding ElementName=root, Path=DataContext.Settings.Template.EditPartnersCell}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource Name}" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridTextColumn Header="{DynamicResource FontSize}" Binding="{Binding Size, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridComboBoxColumn Header="{DynamicResource Alignment}"  ItemsSource="{Binding Source={StaticResource typeDocument}}" SelectedItemBinding="{Binding Justify, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridCheckBoxColumn Header="{DynamicResource Bold}" Binding="{Binding Bold, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridTextColumn Header="{DynamicResource BeforeS}" Binding="{Binding Before, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridTextColumn Header="{DynamicResource AfterS}" Binding="{Binding After, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridTextColumn Header="{DynamicResource LineSpacing}" Binding="{Binding LineSpacing, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridTextColumn Header="{DynamicResource Left}" Binding="{Binding Left, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridTextColumn Header="{DynamicResource Right}" Binding="{Binding Right, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                        <DataGridTextColumn Header="{DynamicResource FirstLine}" Binding="{Binding FirstLine, UpdateSourceTrigger=PropertyChanged}" Width="20*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </DataTemplate>
                    </gu:FlipView.Resources>
                </gu:FlipView>
            </Grid>
        </Grid>
    </Grid>
</Window>